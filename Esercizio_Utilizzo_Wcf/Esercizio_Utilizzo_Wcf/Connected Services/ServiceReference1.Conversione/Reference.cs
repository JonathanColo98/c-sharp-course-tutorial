//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Esercizio_Utilizzo_Wcf.ServiceReference1.Conversione {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/Esercizio_Convertitore")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double doubleValueKmMigliaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double doubleValueMigliaKmField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double doubleValueKmMiglia {
            get {
                return this.doubleValueKmMigliaField;
            }
            set {
                if ((this.doubleValueKmMigliaField.Equals(value) != true)) {
                    this.doubleValueKmMigliaField = value;
                    this.RaisePropertyChanged("doubleValueKmMiglia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double doubleValueMigliaKm {
            get {
                return this.doubleValueMigliaKmField;
            }
            set {
                if ((this.doubleValueMigliaKmField.Equals(value) != true)) {
                    this.doubleValueMigliaKmField = value;
                    this.RaisePropertyChanged("doubleValueMigliaKm");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.Conversione.ConvertiMisure")]
    public interface ConvertiMisure {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConvertiMisure/GetData", ReplyAction="http://tempuri.org/ConvertiMisure/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConvertiMisure/GetData", ReplyAction="http://tempuri.org/ConvertiMisure/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConvertiMisure/GetDataUsingDataContract", ReplyAction="http://tempuri.org/ConvertiMisure/GetDataUsingDataContractResponse")]
        Esercizio_Utilizzo_Wcf.ServiceReference1.Conversione.CompositeType GetDataUsingDataContract(Esercizio_Utilizzo_Wcf.ServiceReference1.Conversione.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConvertiMisure/GetDataUsingDataContract", ReplyAction="http://tempuri.org/ConvertiMisure/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<Esercizio_Utilizzo_Wcf.ServiceReference1.Conversione.CompositeType> GetDataUsingDataContractAsync(Esercizio_Utilizzo_Wcf.ServiceReference1.Conversione.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConvertiMisure/KilometriMiglia", ReplyAction="http://tempuri.org/ConvertiMisure/KilometriMigliaResponse")]
        double KilometriMiglia(double value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConvertiMisure/KilometriMiglia", ReplyAction="http://tempuri.org/ConvertiMisure/KilometriMigliaResponse")]
        System.Threading.Tasks.Task<double> KilometriMigliaAsync(double value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConvertiMisure/MigliaKilometri", ReplyAction="http://tempuri.org/ConvertiMisure/MigliaKilometriResponse")]
        double MigliaKilometri(double value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConvertiMisure/MigliaKilometri", ReplyAction="http://tempuri.org/ConvertiMisure/MigliaKilometriResponse")]
        System.Threading.Tasks.Task<double> MigliaKilometriAsync(double value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ConvertiMisureChannel : Esercizio_Utilizzo_Wcf.ServiceReference1.Conversione.ConvertiMisure, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConvertiMisureClient : System.ServiceModel.ClientBase<Esercizio_Utilizzo_Wcf.ServiceReference1.Conversione.ConvertiMisure>, Esercizio_Utilizzo_Wcf.ServiceReference1.Conversione.ConvertiMisure {
        
        public ConvertiMisureClient() {
        }
        
        public ConvertiMisureClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConvertiMisureClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConvertiMisureClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConvertiMisureClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public Esercizio_Utilizzo_Wcf.ServiceReference1.Conversione.CompositeType GetDataUsingDataContract(Esercizio_Utilizzo_Wcf.ServiceReference1.Conversione.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<Esercizio_Utilizzo_Wcf.ServiceReference1.Conversione.CompositeType> GetDataUsingDataContractAsync(Esercizio_Utilizzo_Wcf.ServiceReference1.Conversione.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public double KilometriMiglia(double value) {
            return base.Channel.KilometriMiglia(value);
        }
        
        public System.Threading.Tasks.Task<double> KilometriMigliaAsync(double value) {
            return base.Channel.KilometriMigliaAsync(value);
        }
        
        public double MigliaKilometri(double value) {
            return base.Channel.MigliaKilometri(value);
        }
        
        public System.Threading.Tasks.Task<double> MigliaKilometriAsync(double value) {
            return base.Channel.MigliaKilometriAsync(value);
        }
    }
}
